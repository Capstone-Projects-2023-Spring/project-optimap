openapi: 3.0.2
info:
  description: OptiMap Restful API
  version: v1
  title: OptiMap Restful API
  termsOfService: http://swagger.io/terms/
  contact:
    email: test@test.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /FireBase/users/{Username}/name.json:
    get:
      tags:
        - OptiMap
      summary: >-
        Data from the Realtime Database is read using the HTTP GET request to an
        endpoint.
      operationId: Read
      parameters:
        - name: Username
          in: path
          description: Get user's account information
          required: true
          schema:
            type: string
            example: curl 'https://OptiMap.firebaseio.com/users/george/name.json'
      responses:
        '200':
          description: Account Found Successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiLogin'
        '400':
          description: Account Doesn't Exist
  /FireBase/users/{Username}/Account:
    put:
      tags:
        - OptiMap
      summary: Data is written to the database using the HTTP PUT request.
      operationId: WriteUp
      parameters:
        - name: Username
          in: path
          description: Input array with Username and Password into name.json
          required: true
          schema:
            type: string
            example: george23@gmail.com
      responses:
        '405':
          description: Invalid input
        '406':
          description: Array with Login already exists
  /FireBase/users/{Username}/{Coords}:
    post:
      tags:
        - OptiMap
      summary: Saving Coords
      operationId: Save
      parameters:
        - name: Username
          in: path
          description: Username of player
          required: true
          schema:
            type: string
            example: george23@gmail.com
        - name: Coords
          in: path
          description: Coordinates
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptiCoords'
      responses:
        '200':
          description: Save completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiCoords'
        '400':
          description: Unable to save, please try again
        '404':
          description: Account doesn't exist
  /FireBase/users/{Username}:
    patch:
      tags:
        - OptiMap
      summary: Data in the database is updated using the PATCH request.
      operationId: Patch
      parameters:
        - name: Username
          in: path
          description: Username of Account
          required: true
          schema:
            type: string
            example: curl PATCH '{"password":"abc12345^^!"}'
      responses:
        '200':
          description: Password changed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiChange'
        '400':
          description: Unable to save, please try again
        '404':
          description: Account doesn't exist
  /FireBase/users/{Username}/files:
    delete:
      tags:
        - OptiMap
      summary: Deletion of user account
      operationId: Remove
      parameters:
        - name: Username
          in: path
          description: Username of player
          required: true
          schema:
            type: string
            example: george23@gmail.com
      responses:
        '200':
          description: Deletion Successful
        '404':
          description: Account Doesn't Exist
components:
  schemas:
    OptiLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: george23@gmail.com
        password:
          type: string
          example: abc123%^
      xml:
        name: OptiLogin
    OptiCoords:
      type: object
      required:
        - username
        - coords
      properties:
        username:
          type: string
          example: george23@gmail.com
        coords:
          type: string
          example: 'Latitude: 39.9800, Longitude: -75.1600'
      xml:
        name: OptiCoords
    OptiChange:
      type: object
      properties:
        password:
          type: string
          example: abc12345^^!
      xml:
        name: OptiChange
