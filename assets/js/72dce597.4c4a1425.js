"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[4033],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9801:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},i="Tasks",s={unversionedId:"development-plan/tasks",id:"development-plan/tasks",title:"Tasks",description:"Planning/Elaboration Phase (PP)",source:"@site/docs/development-plan/tasks.md",sourceDirName:"development-plan",slug:"/development-plan/tasks",permalink:"/project-optimap/docs/development-plan/tasks",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Spring/project-optimap/edit/main/documentation/docs/development-plan/tasks.md",tags:[],version:"current",lastUpdatedBy:"rickwu135",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Activities",permalink:"/project-optimap/docs/development-plan/activities"},next:{title:"Schedule",permalink:"/project-optimap/docs/development-plan/schedule"}},l={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tasks"},"Tasks"),(0,r.kt)("p",null,"##Planning/Elaboration Phase (PP)\n| # | Task                                                              | Design of Unit X | Estimated Effort  | Finish Data                             | Assigned Individual(s) | Successor Tasks                  |\n| - | ----------------------------------------------------------------- | ---------------- | ----------------- | --------------------------------------- | ---------------------- | -------------------------------- |\n| 1 | Brainstorming                                                     | None             | Everyone - 1 week | Ideas                                   | Everyone               | Any                              |\n| 2 | Research on Firebase account Authentication                       | PP1              | 1 person - 1 week | Research                                |                        | Credentials storage Design Model |\n| 3 | Research on Firebase Database                                     | PP1              | 1 person - 1 week | Research                                |                        | Route data storage Design Model  |\n| 4 | Research on Google Maps APIs                                      | PP1              | 1 person - 1 week | Research                                |                        | Route Calculation Design Model   |\n| 5 | Research on React Native (front-end)                              | PP1              | 1 person - 1 week | Research                                |                        | All coding tasks                 |\n| 6 | Design Database/Authentication Model                              | PP2, PP3         | 1 person - 1 week | Flowcharts and System Block Diagram     |                        | Database Creation and Login page |\n| 7 | Design Maps API call Model                                        | PP4              | 1 person - 1 week | Flowcharts and System Block Diagram     |                        | Maps API Configuration           |\n| 8 | Create Firebase Database for \u201cHello world\u201d sample app             | PP3              | 1 person - 1 day  | Database                                |                        | PP9                              |\n| 9 | Create a React Native project connected to \u201cHello world\u201d database | PP5              | 1 person - 1 week | accessible app with database connection |                        | Implementation phase             |"),(0,r.kt)("p",null,"##Implementation Phase (IP)\n| #  | Task                                                     | Design of Unit X | Estimated Effort  | Finish Data                                                        | Assigned Individual(s) | Successor Tasks                                                                          |\n| -- | -------------------------------------------------------- | ---------------- | ----------------- | ------------------------------------------------------------------ | ---------------------- | ---------------------------------------------------------------------------------------- |\n| 1  | Create new Firebase database for OptiMap                 | PP6              | 1 person - 1 day  | functional database                                                |                        | login page, save route feature                                                           |\n| 2  | Implement login/signup page                              | PP6, IP1         | 1 person - 3 days | functional login page                                              |                        | Any                                                                                      |\n| 3  | Implement front-end main page with options               | None             | 1 person - 1 week | All OptiMap pages                                                  |                        | sub pages ((list stops, previous trips, favorited trips)                                 |\n| 4  | Implement destination list page                          | None             | 1 person - 1 week | functional user input list of stops                                |                        | route calculation functionality, timing at each location                                 |\n| 5  | API integration                                          | PP4              | 2 people - 1 week | ability to make calls to Google Maps API & get back direction info |                        | nested API calls within app functionality (creating routes list, obtaining traffic info) |\n| 6  | Implement route calculating functionality                | PP7, IP5         | 2 people - 1 week | Valid map route that can be displayed                              |                        | save route feature, rerouting feature                                                    |\n| 7  | Implement Map UI                                         | IP6              | 2 people - 1 week | User friendly interactive map                                      |                        | visualize routes, directions                                                             |\n| 8  | Implement rerouting feature                              | IP7, IP6, IP5    | 1 person - 3 days | auto reroute based on traffic or other                             |                        | notifications about rerouting, detailed route info                                       |\n| 9  | Implement notifications feature                          | IP8              | 1 person - 3 days | app notifications based on urgent information                      |                        | Notifications popup incase route is not possible                                         |\n| 10 | Implement ability to specify avoidance (of roads, areas) | IP8              | 2 people - 1 week | fully customizable route preferences                               |                        | pre-determine places to avoid in addition to auto-rerouting (traffic)                    |\n| 11 | Implement route saving/favoriting feature                | IP1, IP2, IP6    | 1 person - 1 week | fully functional route saving ability                              |                        | favorited routes page                                                                    |"),(0,r.kt)("p",null,"##Testing Phase (TP)\n| # | Task                                        | Design of Unit X | Estimated Effort        | Finish Data                                              | Assigned Individual(s) | Successor Tasks                              |\n| - | ------------------------------------------- | ---------------- | ----------------------- | -------------------------------------------------------- | ---------------------- | -------------------------------------------- |\n| 1 | Unit Testing                                | All IPs          | 1 person - 1 day        | individual functionalities are error-free and functional |                        | Integration Testing                          |\n| 2 | Integration                                 | All IPs          | 1 person - 1 week       | all functionalities work together and error-free         |                        | Any remaining testing tasks                  |\n| 3 | Functionality                               | All IPs          | 1 person - several days | ensure everything is working as expected                 |                        | Any remaining testing tasks                  |\n| 4 | User acceptance                             | All IPs          | 1 person - several days | successful real-world test                               |                        | Any remaining testing tasks                  |\n| 5 | Performance                                 | All IPs          | 1 person - several days | responsive, resource efficient app                       |                        | Any remaining testing tasks                  |\n| 6 | Usability                                   | All IPs          | 1 person - 1 day        | successful user test                                     |                        | Any remaining testing tasks                  |\n| 7 | Connection to database through React Native | IP1              | 1 person - 1 day        | Successful database connection                           |                        | ability to login and read / write route data |"))}u.isMDXComponent=!0}}]);