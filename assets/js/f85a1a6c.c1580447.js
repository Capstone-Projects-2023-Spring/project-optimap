"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1270],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),c=u(n),p=s,m=c["".concat(l,".").concat(p)]||c[p]||f[p]||i;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,o=new Array(i);o[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[c]="string"==typeof e?e:s,o[1]=a;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},770:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var r=n(7462),s=(n(7294),n(3905));const i={sidebar_position:1},o="Unit tests",a={unversionedId:"testing/unit-testing",id:"testing/unit-testing",title:"Unit tests",description:"Unit tests will be written using the Jest framework to test our React js application",source:"@site/docs/testing/unit-testing.md",sourceDirName:"testing",slug:"/testing/unit-testing",permalink:"/project-optimap/docs/testing/unit-testing",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Spring/project-optimap/edit/main/documentation/docs/testing/unit-testing.md",tags:[],version:"current",lastUpdatedBy:"Endri Pellumbi",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-optimap/docs/category/test-procedures"},next:{title:"Integration tests",permalink:"/project-optimap/docs/testing/integration-testing"}},l={},u=[{value:"Front-end",id:"front-end",level:2},{value:"Back-end",id:"back-end",level:2}],d={toc:u};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"unit-tests"},"Unit tests"),(0,s.kt)("p",null,"Unit tests will be written using the Jest framework to test our React js application"),(0,s.kt)("h2",{id:"front-end"},"Front-end"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"index.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testRenderSite() \n    - Test: Verify site renders  \n    - Result: Pass if site renders successfully correctly\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"App.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testFireBaseTokenGeneration()\n    - Test: Verify Firebase Authentication generate token\n    - Result: Pass if user token is generated successfully\n\ntestRoutes() \n    - Test: Verify routing to different screen \n    - Result: Pass if routing to different screen correctly \n\ntestSignupImport()\n    - Test: Verify Sign up component imports \n    - Result: Pass if Sign up component is found successfully\n\ntestLoginImport()\n    - Test: Verify Sign up component imports \n    - Result: Pass if Login component is found successfully\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"Login.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testNavBarComponentRender()\n    - Test: Verify NavBar component Renders \n    - Result: Pass if NavBar component renders correctly \n\ntestFormComponentRender()\n    - Test: Verify Login form component renders \n    - Result: Pass if Login form component renders correctly \n\ntestEmailFieldRender()\n    - Test: Verify Email field renders \n    - Result: Pass if Email field renders \n\ntestPasswordFieldRender()\n    - Test: Verify Password field renders \n    - Result: Pass if Password field renders \n\ntestLoginButtonRender()\n    - Test: Verify Login button renders\n    - Result: Pass if Login button renders correctly\n\ntestEmailHandler()\n    - Test: Verify handler function responds to a change of event on email input field\n    - Result: Pass if Email event triggers \n\ntestPasswordHandler()\n    - Test: Verify handler function responds to a change of event on password input field\n    - Result: Pass if password event triggers\n\ntestFormSubmitHandler()\n    - Test: Verify handler function responds to a change of event on form submission\n    - Result: Pass if form submission event triggers\n\ntestNullLoginEntry()\n    - Test: Verify if null entry displays an error \n    - Result: Pass if error display upon user login with null entry\n\ntestInvalidLoginEntry()\n    - Test: Verify if invalid login credentials displays an error \n    - Result: Pass if error displays upon login with invalid credentials \n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"Signup.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testNavBarComponentRender()\n    - Test: Verify NavBar component Renders \n    - Result: Pass if NavBar component renders correctly \n\ntestFormComponentRender()\n    - Test: Verify Sign up form component renders \n    - Result: Pass if Sign up form component renders correctly \n\ntestEmailFieldRender()\n    - Test: Verify Email field renders \n    - Result: Pass if Email field renders \n\ntestPasswordFieldRender()\n    - Test: Verify Password field renders \n    - Result: Pass if Password field renders \n\ntestConfirmPasswordFieldRender()\n    - Test: Verify Confirm Password field renders \n    - Result: Pass if Confirm Password field renders \n\ntestSignupButtonRender()\n    - Test: Verify Sign up buttom renders\n    - Result: Pass if Sign up button renders correctly\n\ntestEmailHandler()\n    - Test: Verify handler function responds to a change of event on email input field\n    - Result: Pass if Email event triggers \n\ntestPasswordHandler()\n    - Test: Verify handler function responds to a change of event on password input field\n    - Result: Pass if password event triggers\n\ntestConfirmPasswordHandler()\n    - Test: Verify handler function responds to a change of event on confirm password input field\n    - Result: Pass if confirm password event triggers\n\ntestFormSubmitHandler()\n    - Test: Verify handler function responds to a change of event on form submission\n    - Result: Pass if form submission event triggers\n\ntestNullSignupEntry()\n    - Test: Verify if null entry displays an error \n    - Result: Pass if error display upon user login with null entry\n    \ntestInvalidSignupEntry()\n    - Test: Verify if invalid Sign up credentials displays an error \n    - Result: Pass if error displays upon Sign up with invalid credentials \n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"Navbar.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testNavbarLogo()\n    - Test: Verify OptiMapLogo displays on navbar\n    - Result: Pass if image displays correctly\n")),(0,s.kt)("h2",{id:"back-end"},"Back-end"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"DataBase.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testRouteRetrieval()\n    - Test: Verify retrieval of routes \n    - Result: Pass is user routes are retrieved correctly\n\ntestSaveRoute()        \n    - Test: Verify routes are saved \n    - Result: Pass if routes are saved correctly\n\ntestInvalidRoute() \n    - Test: Verify an invalid route cannot be saved \n    - Result: Pass if invalid route cannot be saved successfully\n\ntestUserInformation()\n    - Test: Verify user information is saved to firebase\n    - Result: Pass if user inforation is correctly saved to firebase\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"MapApi.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testAddress()\n    - Test: Verify entering an address retrieve coordinate\n    - Result: Pass if entering an address retrieves the correct coordinate\n\ntestInvalidAddress()\n    - Test: Verify api request with invalid information returns error\n    - Result: Pass if an invalid request correctly returns error\n\ntestGeolocation()\n    - Test: Verify api request for geolocation return coordinate\n    - Result: Pass if api request for geolocation returns correct coordinate\n\ntestTransportationMode()\n    - Test: Verify change of tranportation \n    - Result: Pass if change of tranportation correctly changes the route direction based on mode\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"Algorithm.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"testTimeOptimization()\n    - Test: Verify route calculation optimizes route based on time\n    - Result: Pass if route is correctly optimized based on time\n\ntestDistanceOptimization()\n    - Test: Verify route calculation optimizes route based on distance\n    - Result: Pass if route is correctly optimized based on distance\n")))}c.isMDXComponent=!0}}]);